package bluetooth.client;

import android.app.Activity;
import android.bluetooth.BluetoothAdapter;
import android.bluetooth.BluetoothDevice;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.TextView;

//리모트 장치가 검색 허용을 하고 있을 경우: 리모트 장치는 서버
//현 장치가 장치를 검색하는 경우: 현 장치는 클라이언트
public class MainActivity extends Activity {
    private ListView listView;
	private ArrayAdapter<String> arrayAdapter;
	
	@Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
        listView = (ListView) findViewById(R.id.listView);
        
        arrayAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1);
        listView.setAdapter(arrayAdapter);
        
        listView.setOnItemClickListener(new OnItemClickListener() {
        	@Override
        	public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
        		TextView textView = (TextView) view;
        		String address = textView.getText();
        	}
        });
        
        //이미 검색된 것 중에서 페어링된 장치 추가
        BluetoothAdapter bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
        for(BluetoothDevice bluetoothDevice : bluetoothAdapter.getBondedDevices()) {
        	String info = "";
			//info += bluetoothDevice.getName() + "\n";
			//info += "페어링된 상태";
        	info = bluetoothDevice.getAddress();
			arrayAdapter.add(info);
        }
        
        //장치 검색을 시작했을 경우 페어링되지 않은 장치 추가
        IntentFilter filter = new IntentFilter();
        filter.addAction(BluetoothDevice.ACTION_FOUND);
        filter.addAction(BluetoothAdapter.ACTION_DISCOVERY_FINISHED);
        registerReceiver(receiver, filter);
        
        //사용자가 장치 검색을 수동으로 시작했을 경우
        //검색을 중지하고 코드에서 장치 검색을 시작
        if(bluetoothAdapter.isDiscovering()) {
        	bluetoothAdapter.cancelDiscovery();
        }
        bluetoothAdapter.startDiscovery();
    }
	
	private BroadcastReceiver receiver = new BroadcastReceiver() {
		@Override
		public void onReceive(Context context, Intent intent) {
			String action = intent.getAction();			
			if(action.equals(BluetoothDevice.ACTION_FOUND)) {
				String info = "";
				BluetoothDevice bluetoothDevice = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);
				info = bluetoothDevice.getAddress();
				/*
				info += bluetoothDevice.getName() + "\n";
				if(bluetoothDevice.getBondState() != BluetoothDevice.BOND_BONDED) {
					info += "페이링하기";
				}
				*/			
				arrayAdapter.add(info);				
			} else if(action.equals(BluetoothAdapter.ACTION_DISCOVERY_FINISHED)) {
				arrayAdapter.add("**검색 완료**");
			}
		}
	};
	
	@Override
	protected void onDestroy() {
		super.onDestroy();
		unregisterReceiver(receiver);
	};
}